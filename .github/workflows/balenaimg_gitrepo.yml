name: Generic Balena docker push

######################Balena Base image names here https://www.balena.io/docs/reference/base-images/devicetypes/ ################### 

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_call:    
    inputs:
      aarch:
        required: true
        default: 'generic-aarch64'
        type: string

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      
      - name: downcase metrics REPO
        run: |
          echo "REPO=${REGISTRY,,}" >>${GITHUB_ENV}
      - name: downcase metrics IMG
        run: |
          echo "IMG=${IMAGE_NAME,,}" >>${GITHUB_ENV}
      - name: downcase metrics NAME
        run: |
          echo "AARCH=${inputs.aarch}" >>${GITHUB_ENV}
      - name: check metrics NAME
        run: |
          echo " ${REPO}/${IMG}:${{ inputs.aarch }}"
          echo " ${{ steps.meta.outputs.tags }}" 

      - name: Build and push Docker image python 
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          push: ${{ github.event_name != 'pull_request' }}
          #platforms: linux/arm64/v8, linux/amd64, linux/arm/v7 
          context: .
          file: ./Dockerfile.template
          tags: ${{ env.REPO }}/${{ env.IMG }}:${{ env.AARCH }}"
          build-args: AARCH=${{ env.AARCH }}"
          labels: ${{ env.AARCH }}" 
